% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spde_sampling.R
\name{sample_alpha2_line}
\alias{sample_alpha2_line}
\title{Sample Gaussian process with alpha = 2 on a line given end points}
\usage{
sample_alpha2_line(
  kappa,
  sigma,
  sigma_e,
  u_e,
  l_e,
  t = NULL,
  Line = NULL,
  nt = 100,
  py = NULL,
  y = NULL,
  sample = TRUE
)
}
\arguments{
\item{kappa}{parameter kappa}

\item{sigma_e}{parameter sigma_e}

\item{u_e}{(4 x 1) process and derivative at the two end points}

\item{l_e}{(1 x 1) line length}

\item{t}{(n x 1) distance on the line to be sampled from (not end points)}

\item{nt}{(1 x 1) number of equidistance points to sample from if t is  null}

\item{py}{(n x 1) observation locations}

\item{y}{(n x 1) observations}

\item{sample}{(bool) if true sample else return posterior mean}

\item{theta}{parameter theta}
}
\description{
Sample Gaussian process with alpha = 2 on a line given end points
}
\details{
Samples a Gaussian process \eqn{u(t)} with alpha = 2 on an
interval \eqn{(0,l_e)} conditionally on \eqn{u(0), u(l_e)}.
If `y` and `py` are supplied, the sampling is done conditionally on observations
\deqn{y_i = u(t_i) + sigma_e e_i}{y_i = u(t_i) + sigma_e e_i}
where \eqn{e_i} are independent standard Gaussian variables.
}
