% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metric_graph.R
\name{graph_components}
\alias{graph_components}
\title{Connected components of metric graph}
\value{
Object of \code{\link{R6Class}} for creating metric graph components.
}
\description{
Class representing connected components of a metric graph
}
\details{
A list of graph objects created from vertex and edge matrices, or
from an sp::Lines object where each line is representing and edge. For more
details, see the help vignette:
\code{vignette("metric_graph", package = "MetricGraph")}
}
\examples{
library(sp)
line1 <- Line(rbind(c(0, 0), c(1, 0)))
line2 <- Line(rbind(c(1, 0), c(2, 0)))
line3 <- Line(rbind(c(1, 1), c(2, 1)))
Lines <-  SpatialLines(list(Lines(list(line1), ID = "1"),
                           Lines(list(line2), ID = "2"),
                           Lines(list(line3), ID = "3")))
graphs <- graph_components$new(Lines)
graphs$plot()
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{graphs}}{list of graphs}

\item{\code{n}}{the number of graphs}

\item{\code{sizes}}{number of vertices for each of the graphs}

\item{\code{lengths}}{total edge lengths for each of the graphs
Create metric graphs for connected components}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-graph_components-new}{\code{graph_components$new()}}
\item \href{#method-graph_components-get_largest}{\code{graph_components$get_largest()}}
\item \href{#method-graph_components-plot}{\code{graph_components$plot()}}
\item \href{#method-graph_components-clone}{\code{graph_components$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-graph_components-new"></a>}}
\if{latex}{\out{\hypertarget{method-graph_components-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{graph_components$new(lines = NULL, V = NULL, E = NULL, by_length = TRUE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lines}}{object of type \code{SpatialLinesDataFrame} or \code{SpatialLines}}

\item{\code{V}}{n x 2 matrix with Euclidean coordinates of the n vertices}

\item{\code{E}}{m x 2 matrix where each row represents an edge}

\item{\code{by_length}}{Sort the components by total edge length? If FALSE,
the components are sorted by the number of vertices.}

\item{\code{...}}{additional arguments used when specifying the graphs}

\item{\code{longlat}}{If TRUE, then it is assumed that the coordinates are given
in Longitude/Latitude and that distances should be computed in km.}

\item{\code{tolerance}}{vertices that are closer than this number are merged when
constructing the graph (default = 1e-10). If \code{longlat = TRUE}, the
tolerance is given in km.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{graph_components} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-graph_components-get_largest"></a>}}
\if{latex}{\out{\hypertarget{method-graph_components-get_largest}{}}}
\subsection{Method \code{get_largest()}}{
Return the largest component
Plot all components
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{graph_components$get_largest()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-graph_components-plot"></a>}}
\if{latex}{\out{\hypertarget{method-graph_components-plot}{}}}
\subsection{Method \code{plot()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{graph_components$plot(edge_colors = NULL, vertex_colors = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{edge_colors}}{a 3 x nc matrix with RGB values for the edge colors to
be used when plotting each graph}

\item{\code{vertex_colors}}{a 3 x nc matrix with RGB values for the edge colors to
be used when plotting each graph}

\item{\code{...}}{additional arguments for plotting the individual graphs}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
called for its side effects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-graph_components-clone"></a>}}
\if{latex}{\out{\hypertarget{method-graph_components-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{graph_components$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
