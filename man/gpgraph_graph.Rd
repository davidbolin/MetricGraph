% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.object.R
\name{gpgraph_graph}
\alias{gpgraph_graph}
\title{Graph objects for specification of Gaussian processes}
\description{
Class representing general metric graphs.
}
\details{
A graph object created from vertex and edge matrices, or from an sp::Lines
object where each line is representing and edge.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{El}}{length of edges}

\item{\code{EID}}{ID of edges}

\item{\code{A}}{constraint matrix used to set Kirchhoff constraints}

\item{\code{CBobj}}{svd stuct obj}

\item{\code{Points}}{Observations in SpatialPointsDataFrame}

\item{\code{y}}{the data connected to P}

\item{\code{PtE}}{Points to Line (connected to Points),
[,1] - edge index,
[,2] - distance along the line (i.e. distance to initial point)}

\item{\code{PtV}}{Points to Vertex observations to vertex
[,1] - vertex index,}

\item{\code{V}}{poisition in the space [,1] - id [,-1] - point}

\item{\code{EtV}}{[,1]- index of Lines, [,2] - vertex lower edge, [,3] - vertex upper edge}

\item{\code{nE}}{number of edges}

\item{\code{nV}}{number of vertices}

\item{\code{Lines}}{List of Lines object for building the graph}

\item{\code{geo.dist}}{Geodesic distance matrix}

\item{\code{res.dist}}{Resistance distance matrix}

\item{\code{Laplacian}}{The weighted graph Laplacian}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GPGraph::graph-new}{\code{gpgraph_graph$new()}}
\item \href{#method-GPGraph::graph-split_line}{\code{gpgraph_graph$split_line()}}
\item \href{#method-GPGraph::graph-compute_geodist}{\code{gpgraph_graph$compute_geodist()}}
\item \href{#method-GPGraph::graph-compute_resdist}{\code{gpgraph_graph$compute_resdist()}}
\item \href{#method-GPGraph::graph-compute_laplacian}{\code{gpgraph_graph$compute_laplacian()}}
\item \href{#method-GPGraph::graph-observation_to_vertex}{\code{gpgraph_graph$observation_to_vertex()}}
\item \href{#method-GPGraph::graph-add_observations}{\code{gpgraph_graph$add_observations()}}
\item \href{#method-GPGraph::graph-add_observations2}{\code{gpgraph_graph$add_observations2()}}
\item \href{#method-GPGraph::graph-buildA}{\code{gpgraph_graph$buildA()}}
\item \href{#method-GPGraph::graph-clone}{\code{gpgraph_graph$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-new"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-new}{}}}
\subsection{Method \code{new()}}{
Create a new gpgraph.graph object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$new(Lines = NULL, P = NULL, E = NULL, El = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{Lines}}{sp object SpatialLines DataFrame or SpatialLines}

\item{\code{P}}{n x 2 matrix with Euclidean coordinates of the n vertices}

\item{\code{E}}{m x 2 matrix where each line represents an edge}

\item{\code{El}}{m x 1 vector with edge lengths}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
A graph object can be initialized in two ways. The first method is
to specify P and E. In this case, if El is not specified, all edges are
assumed to be straight lines. Otherwise the edge lengths set in El are used.
The second option is to specify the graph based on Lines. In this case,
the vertices are set by the end points of the lines. Thus, if two lines are intersecting
somewhere else, this will not be viewed as a vertex.
}

\subsection{Returns}{
A gpgraph.graph object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-split_line"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-split_line}{}}}
\subsection{Method \code{split_line()}}{
Split line by point
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$split_line(E, t)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{E}}{Edge to be split}

\item{\code{t}}{Normalized distance to first edge}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-compute_geodist"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-compute_geodist}{}}}
\subsection{Method \code{compute_geodist()}}{
Computes shortest path distances between the vertices in the graph
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$compute_geodist()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-compute_resdist"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-compute_resdist}{}}}
\subsection{Method \code{compute_resdist()}}{
Computes the resistance metric between the vertices in the graph
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$compute_resdist()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-compute_laplacian"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-compute_laplacian}{}}}
\subsection{Method \code{compute_laplacian()}}{
Compute graph Laplacian for the graph
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$compute_laplacian()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-observation_to_vertex"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-observation_to_vertex}{}}}
\subsection{Method \code{observation_to_vertex()}}{
Add observation locations as vertices in the graph
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$observation_to_vertex()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-add_observations"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-add_observations}{}}}
\subsection{Method \code{add_observations()}}{
Add observations to the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$add_observations(Spoints, y = NULL, y.index = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{Spoints}}{SpatialPoints or SpatialPointsDataFrame of the observations}

\item{\code{y}}{(n x 1) the value of the observations}

\item{\code{y.index}}{(string, int) position in Spoints where y is located}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-add_observations2"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-add_observations2}{}}}
\subsection{Method \code{add_observations2()}}{
add observations to the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$add_observations2(y, PtE, Spoints = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y}}{(n x 1) the value of the observations}

\item{\code{PtE}}{(n x 2) edge index, distance on index}

\item{\code{Spoints}}{SpatialPoints or SpatialPointsDataFrame of the observations}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-buildA"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-buildA}{}}}
\subsection{Method \code{buildA()}}{
build Kirchoff constraint matrix from edges, NOT implemented for circles (i.e. self closed edges)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$buildA(alpha, edge_constraint = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{alpha}}{(int) which type of constraint (currently only 2 implemented)}

\item{\code{edge_constraint}}{(bool) if true add constraint on vertices of degree 1.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GPGraph::graph-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GPGraph::graph-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpgraph_graph$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
