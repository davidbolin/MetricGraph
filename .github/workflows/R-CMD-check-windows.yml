# NOTE: This workflow is overkill for most R packages
# check-standard.yaml is likely a better choice
# usethis::use_github_action("check-standard") will install it.
#
# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - devel
      - stable
  pull_request:
    branches:
      - devel

name: R-CMD-check-windows

jobs:
  R-CMD-check-windows:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', rtools-version: '42'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      NOT_CRAN: false

    steps:
      - uses: actions/checkout@v3
      
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools-version }}
          extra-repositories: "https://inla.r-inla-download.org/R/testing"
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2
          
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          dependencies: '"all"'
          extra-packages: |
             rcmdcheck
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
      - name: Installing rSPDE
        run: |
          install.packages(c("remotes", "rmarkdown"),dependencies=TRUE)
          remotes::install_github("davidbolin/rSPDE")
        shell: Rscript {0}        
      - uses: r-lib/actions/check-r-package@v2
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        with:
          args: 'c("--no-manual", "--as-cran")'
